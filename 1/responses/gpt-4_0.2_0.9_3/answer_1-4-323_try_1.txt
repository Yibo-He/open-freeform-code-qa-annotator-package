You can achieve this by creating a function that will return a data frame with the minimum value, column name, row names where the minimum value is found, and the frequency of the minimum value. Then, you can use `lapply` to apply this function to each column of your data frame. Here's how you can do it:

```r
# Function to get min value, column name, row names and frequency
get_min_info <- function(x, col_name) {
  min_val <- min(x)
  row_names <- which(x == min_val)
  freq <- length(row_names)
  data.frame(min.value = min_val, column = col_name, rowname = list(row_names), freq.times = freq)
}

# Apply function to each column
result <- do.call(rbind, lapply(seq_along(cars), function(i) get_min_info(cars[[i]], names(cars)[i])))

# Print result
print(result)
```

This will give you a data frame where each row corresponds to a column in your original data frame, and the columns are the minimum value, column name, row names where the minimum value is found, and the frequency of the minimum value.

Note: The `rowname` column in the result is a list column. Each element of this column is a numeric vector with the row names where the minimum value is found. If you want to convert this to a character column with the row names separated by commas, you can do it like this:

```r
result$rowname <- sapply(result$rowname, function(x) paste(x, collapse = ","))
```

This will replace the list column with a character column where the row names are separated by commas.