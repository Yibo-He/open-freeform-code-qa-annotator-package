You can achieve this by creating a function that will return a data frame with the minimum value, column name, row names where the minimum value is found, and the frequency of the minimum value. Then, you can use `lapply` to apply this function to each column of your data frame.

Here is an example:

```R
# Function to get min value, column name, row names and frequency
get_min_info <- function(x, col_name) {
  min_val <- min(x)
  min_rows <- which(x == min_val)
  freq <- length(min_rows)
  data.frame(min.value = min_val, column = col_name, rowname = list(min_rows), freq.times = freq)
}

# Apply the function to each column of the data frame
result <- do.call(rbind, lapply(seq_along(cars), function(i) get_min_info(cars[[i]], names(cars)[i])))

# Print the result
print(result)
```

This will give you a data frame where each row corresponds to a column in your original data frame, and the columns are the minimum value, column name, row names where the minimum value is found, and the frequency of the minimum value.

Note that the `rowname` column is a list column, meaning that each element of this column is a vector of row names. This is necessary because there can be multiple row names where the minimum value is found.

If you want to do the same for the maximum values, you can create a similar function `get_max_info` and replace `min` with `max` and `which.min` with `which.max`.