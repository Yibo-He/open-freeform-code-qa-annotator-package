This is not a bug, but rather a feature of how pandas handles DataFrame indexing. 

When you use double brackets like `df[['name']]` or `df.loc[:, ['name']]`, you are essentially creating a new DataFrame with a single column. This is different from `df['name']` or `df.loc[:, 'name']`, which returns a Series. 

When you try to assign a DataFrame (df[['age']]) to a DataFrame (df[['name']]), pandas tries to match on the columns and the index. In your case, the column names are different ('name' vs 'age'), so pandas cannot find a match and hence assigns NaN values.

On the other hand, when you assign a Series (df['age'] or df.loc[:, 'age']) to a DataFrame (df[['name']]), pandas will ignore the column names and just assign the values based on the index. This is why you get the expected result.

So, this is intended behavior in pandas, not a bug. It's just a matter of understanding how pandas handles different types of indexing and assignment.