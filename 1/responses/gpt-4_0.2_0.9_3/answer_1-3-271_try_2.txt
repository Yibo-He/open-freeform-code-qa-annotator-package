The `re.split()` function does not support hierarchy of delimiters. It splits the string based on the first delimiter it finds. 

To achieve your desired output, you can create a function that iterates through the delimiters in the order you want and splits the string accordingly. Here is an example:

```python
def split_string(s, delimiters):
    for delimiter in delimiters:
        parts = s.split(delimiter, 1)
        if len(parts) > 1:
            return parts
    return [s]

# Test the function
delimiters = [' and ', ' & ', ' - ']
strings = ['121 34 adsfd', 'dsfsd and adfd', 'dsfsd & adfd', 'dsfsd - adfd', 'dsfsd and adfd and adsfa', 'dsfsd and adfd - adsfa', 'dsfsd - adfd and adsfa']

for s in strings:
    print(f'{s} -> {split_string(s, delimiters)}')
```

This function works by trying to split the string on each delimiter in turn. If the split operation results in more than one part, it returns the parts. If none of the delimiters are found in the string, it returns the original string as a single-item list.