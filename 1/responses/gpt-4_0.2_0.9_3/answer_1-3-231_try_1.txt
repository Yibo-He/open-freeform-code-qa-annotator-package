Yes, you can get the shape of the list of tensors without converting it into a numpy array. 

Since your list is a list of PyTorch tensors, you can use the `size()` method of PyTorch tensor to get the shape of each tensor in the list. Here is how you can do it:

```python
for i, tensor in enumerate(your_list):
    print(f"Shape of tensor {i}: {tensor.size()}")
```

This will print the shape of each tensor in the list. If you want to get the total shape of the list, you can do something like this:

```python
total_shape = (len(your_list),) + your_list[0].size()
print(f"Total shape: {total_shape}")
```

This will give you a tuple where the first element is the length of the list (i.e., the number of tensors in the list), and the remaining elements are the shape of the tensors. Note that this assumes that all tensors in the list have the same shape. If the tensors can have different shapes, you will need to handle this differently.