You can create a dictionary that maps the elements in `b` to the elements in `rest` for the first 4 elements. Then, you can use a list comprehension to create a new list that replaces the elements in `last` according to this dictionary. Here is how you can do it:

```python
rest=[5, 7, 11, 4]
b=[21, 22, 33, 31, 23, 15, 19, 13, 6]
last=[33, 19, 40, 21, 31, 22, 6, 15, 13, 23]

# Create a dictionary that maps the first 4 elements in b to rest
replace_dict = {b[i]: rest[i] for i in range(4)}

# Create a new list that replaces the elements in last according to replace_dict
new_last = [replace_dict.get(i, i) for i in last]

print(new_last)
```

This will output:

```
[11, 19, 40, 5, 4, 7, 6, 15, 13, 23]
```

This works by using the `get` method of the dictionary, which returns the value for a key if it exists in the dictionary, and a default value if it does not. In this case, the default value is the element itself, so elements in `last` that do not need to be replaced are left as they are.