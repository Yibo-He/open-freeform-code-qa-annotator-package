Linked lists, especially doubly-linked lists, are very useful in certain real-life applications. Here are a few examples:

1. **Browser History**: The back and forward buttons in a web browser can be implemented using a doubly-linked list. Each node in the list can represent a web page. The 'next' pointer of a node points to the page visited after the current one, and the 'previous' pointer points to the page visited before the current one.

2. **Music Player**: As you mentioned, a music player can use a doubly-linked list to manage its playlist. Each node represents a song. The 'next' pointer can be used to go to the next song, and the 'previous' pointer can be used to go back to the previous song.

3. **Image Viewer**: An image viewer can use a doubly-linked list to manage images. The 'next' pointer can be used to go to the next image, and the 'previous' pointer can be used to go back to the previous image.

4. **Book Reading Apps**: These apps can use a doubly-linked list to manage the pages of a book. The 'next' pointer can be used to go to the next page, and the 'previous' pointer can be used to go back to the previous page.

As for your second question, whether it would be simpler to use a list or a linked list depends on the specific use case. Here are some benefits of using a linked list:

1. **Dynamic Size**: Unlike arrays, linked lists do not have a fixed size. They can grow and shrink during the runtime of an application.

2. **Efficient Insertions/Deletions**: Inserting a new element in an array of elements is expensive because the room has to be created for the new elements and to create room existing elements have to be shifted. For linked lists, insertions and deletions at any position can be done more efficiently.

3. **Ease of Implementation**: Data structures such as stack and queues can be easily implemented using linked lists.

In the case of a music player, a linked list could be more efficient if you frequently add or remove songs from the playlist. If the playlist is mostly static, then an array or list could be simpler and more efficient.