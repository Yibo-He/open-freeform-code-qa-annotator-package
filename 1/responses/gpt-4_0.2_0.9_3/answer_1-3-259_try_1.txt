You can use the Python Imaging Library (PIL) and NumPy to achieve this. Here is a simple example of how you can brighten an image:

```python
from PIL import Image
import numpy as np

# Open the image file
img = Image.open('input.jpg').convert('RGB')

# Convert the image data to an array
data = np.array(img)

# Apply a scaling factor to the red, green, and blue channels
# This will brighten the image
factor = 1.5
data = data * factor

# The previous operation could have set values over 255
# Clip values to 255
data = np.clip(data, 0, 255)

# Convert the data back to an image
img = Image.fromarray(data.astype('uint8'))

# Save the new image
img.save('output.jpg')
```

This will brighten the entire image. If you want to brighten only the dark areas, you could apply a condition to the data array to only modify those pixels:

```python
# Only brighten pixels that are below a certain value
mask = data < 128
data[mask] = data[mask] * factor
```

This will brighten only the dark areas of the image. You can adjust the threshold and the scaling factor to get the result you want.

If you want to apply more complex transformations to the image, you might want to look into using OpenCV, which provides a lot of powerful image processing functions.