You can achieve this by creating a dictionary that maps the elements in `b` to the elements in `rest`, and then use a list comprehension to replace the elements in `last`.

Here is the Python code:

```python
rest=[5, 7, 11, 4]
b=[21, 22, 33, 31, 23, 15, 19, 13, 6]
last=[33, 19, 40, 21, 31, 22, 6, 15, 13, 23]

# Create a dictionary that maps b to rest
b_to_rest = dict(zip(b[:len(rest)], rest))

# Replace elements in last using the dictionary
last = [b_to_rest.get(i, i) for i in last]

print(last)
```

This code will output:

```
[11, 19, 40, 5, 4, 7, 6, 15, 13, 23]
```

This works by using the `get` method of the dictionary, which returns the value for a key if it exists in the dictionary, and a default value if it does not. In this case, the default value is the element itself, so elements in `last` that do not exist in `b` are not replaced.