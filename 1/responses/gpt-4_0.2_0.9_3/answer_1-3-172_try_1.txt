In Python, you can use the `matplotlib` library to create a forest plot. Unfortunately, there is no built-in function for creating forest plots in Python like there is in R or STATA, but you can create one manually.

Here is a simple example of how you can create a forest plot in Python:

```python
import matplotlib.pyplot as plt
import numpy as np

# Define the studies and their relative risk (RR) and confidence intervals (CI)
studies = ['Study 1', 'Study 2', 'Study 3', 'Study 4', 'Study 5']
RR = [1.2, 1.5, 0.9, 1.1, 1.3]
CI_lower = [1.0, 1.2, 0.7, 0.9, 1.1]
CI_upper = [1.4, 1.8, 1.1, 1.3, 1.5]

# Create a figure and a plot
fig, ax = plt.subplots()

# Plot the RRs with their CIs
for i in range(len(studies)):
    ax.plot([CI_lower[i], CI_upper[i]], [i, i], color='black')
    ax.plot(RR[i], i, 'o', color='red')

# Add the study names
ax.set_yticks(range(len(studies)))
ax.set_yticklabels(studies)

# Add labels and title
ax.set_xlabel('Relative Risk')
ax.set_title('Forest Plot')

# Show the plot
plt.show()
```

In this example, we first define the studies and their relative risks and confidence intervals. We then create a figure and a plot. For each study, we plot a line representing the confidence interval and a point representing the relative risk. We then add the study names as y-tick labels, add labels and a title, and show the plot.

Please note that this is a very basic example. You might want to add more features to your forest plot, such as a vertical line at RR=1, different colors for different studies, error bars, etc. You might also want to use the `numpy` library to calculate the relative risks and confidence intervals from your data.