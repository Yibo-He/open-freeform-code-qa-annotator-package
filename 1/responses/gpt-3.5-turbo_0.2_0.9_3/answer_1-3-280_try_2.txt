In Django, `@property` is a decorator that allows you to define a method as a property of a model. When you use `@property` decorator on a method, it allows you to access the method as an attribute of the model instance, without calling it as a method.

In the example you provided, `full_name` is a property of the `Person` model. When you access `full_name` on an instance of the `Person` model, it returns the full name of the person as a string. Without the `@property` decorator, `full_name` would be a regular method and you would need to call it like `person.full_name()`.

So, the difference between using `@property` and not using it is that with `@property`, you can access the method as an attribute of the model instance, without calling it as a method. This can make your code more readable and easier to use.