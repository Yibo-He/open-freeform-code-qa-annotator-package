Yes, you can display the counted value of the histogram aggregate in Plotly.Express histogram by using the `custom_data` parameter. Here's an example:

```python
import plotly.express as px
import pandas as pd

df = pd.DataFrame({"A":[1,1,1,2,2,3,3,3,4,4,4,5]})

fig = px.histogram(df, x="A", custom_data=["count"])
fig.update_traces(texttemplate='%{customdata[0]}', textposition='outside')
fig.show()
```

In this example, we added the `custom_data` parameter to the `px.histogram()` function and specified that we want to include the count of each bin. We then updated the traces to display the custom data as text labels outside the bars using the `texttemplate` and `textposition` parameters.

The resulting histogram will display the count of each bin as text labels on top of the bars.