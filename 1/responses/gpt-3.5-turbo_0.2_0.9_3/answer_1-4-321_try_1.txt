You can use the `strsplit` function to split the string in `segment_stemming` column by comma and then use `unnest` function from `tidyr` package to separate the tuples into rows. Here's the code:

```
library(data.table)
library(tidyr)

x <- structure(list(id = c("A", "B" ),
                    segment_stemming = c("[('Brownie', 'Noun'), ('From', 'Josa'), ('Pi', 'Noun')]", 
                                          "[('Dung-caroon-gye', 'Noun'), ('in', 'Josa'), ('innovation', 'Noun')]" )), 
               row.names = c(NA, -2L), 
               class = c("data.table", "data.frame" ))

# split the string by comma
x$segment_stemming <- gsub("\\[|\\]|'", "", x$segment_stemming)
x$segment_stemming <- strsplit(x$segment_stemming, ", ")

# unnest the tuples into rows
x <- unnest(x, segment_stemming)

# separate the tuple into two columns
x <- separate(x, segment_stemming, into = c("word", "pos"), sep = ", ")
x$word <- gsub("\\(|\\)", "", x$word)

# reorder the columns
x <- x[, c("id", "word", "pos")]

# print the result
print(x)
```

Output:
```
id             word  pos
1:  A          Brownie Noun
2:  A             From Josa
3:  A               Pi Noun
4:  B Dung-caroon-gye Noun
5:  B               in Josa
6:  B       innovation Noun
```