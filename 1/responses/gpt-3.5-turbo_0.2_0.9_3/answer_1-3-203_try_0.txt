It's possible that the slow performance is due to compatibility issues with the M1 Max chip. Some software may not be optimized for this new architecture yet. However, there are a few things you can try to improve performance:

1. Use native M1 versions of software whenever possible. This means using software that has been specifically compiled for the M1 chip. For example, you can try using the Miniforge-arm64 installation instead of Anaconda.

2. Use Apple's Metal API for GPU acceleration. This can significantly improve performance for certain tasks. You can try installing the Metal version of TensorFlow and see if that helps.

3. Use a different IDE or editor. PyCharm may not be optimized for the M1 chip yet. You can try using a different IDE or editor, such as VS Code or Sublime Text, and see if that improves performance.

4. Check your code for any inefficiencies. It's possible that your code could be optimized to run faster. You can try profiling your code to identify any bottlenecks and optimize accordingly.

5. Wait for updates. As more software is updated to support the M1 chip, performance should improve. Keep an eye out for updates to the software you're using and install them as they become available.

It's also worth noting that the performance of your M1 Max chip is still very good compared to the Intel Core i5-6360U CPU in your previous machine. Even though the benchmarks you're seeing may be slower than expected, your new machine is still likely much faster overall.