How filter json file with jq using bash

I am trying to filter my json file using bash, which file could be something like:
```
{
    "key1": [],
    "key2":["first_value","second_value"]
}
```

In case I would like to fetch key1 and key2 I got I can do something like:
```
if $(cat $my_json | jq 'has("key1")'); then
  values=$(jq -r ".key1" "$my_json")

  for item in $values
  do
    echo "Item : $item"
  done
fi
```

The output of the previous is:
```
Output:

Item : []
```

This prevents any issues in the case my file hasn't such key and I want to verify that.
How can I verify that values is empty, referred to my example?
I want to avoid any iteration on empty values.
Is there any way to verify the existing key with jq, that should not be empty?
The goal I would like to achieve is something like 
```
key2:
- first_value
- second_value
```

in case of key, since it is empty I don't want to have any results
