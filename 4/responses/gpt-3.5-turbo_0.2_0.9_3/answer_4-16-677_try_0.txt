The issue with your script is that you are using single quotes around the `$searchT` variable in the `grep` command. Single quotes prevent variable expansion, so the `grep` command is looking for the literal string `$searchT` instead of the value of the variable.

To fix this, you can use double quotes around the `grep` command and escape the inner double quotes with a backslash. Here's the updated script:

```
#!/bin/bash
read -p "enter search term here: " searchT

if grep -wi "$searchT" test.txt; then     
    echo "$(grep "$searchT" test.txt | wc -l) number of matches found"
    grep "$searchT" test.txt

else 
    echo "no match found"    
fi

exit 0
```

In this updated script, we removed the `cat` command and piped the output of `grep` directly to `wc -l` and `echo`. We also removed the single quotes around `$searchT` in the `grep` command and replaced them with escaped double quotes. Finally, we simplified the `if` statement by using the exit status of `grep` directly.