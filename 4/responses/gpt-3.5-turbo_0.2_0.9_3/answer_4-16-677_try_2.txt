The issue with your script is that you are using single quotes around the `$searchT` variable in the `grep` command. Single quotes prevent variable expansion, so the `grep` command is searching for the literal string "$searchT" instead of the value of the variable.

To fix this, you can use double quotes around the `grep` command and escape the double quotes inside the command. Here's the updated script:

```
#!/bin/bash
read -p "enter search term here: " searchT

if grep -wi "$searchT" test.txt >/dev/null; then
    echo "$(grep -wic "$searchT" test.txt) number of matches found"
    grep -win "$searchT" test.txt
else
    echo "no match found"
fi

exit 0
```

In this updated script, we use double quotes around the `grep` command and escape the double quotes inside the command. We also use the `-c` option with `grep` to count the number of matches, and the `-n` option to show the line numbers of the matches. Finally, we redirect the output of the first `grep` command to `/dev/null` to suppress it, since we only care about the output of the second `grep` command.