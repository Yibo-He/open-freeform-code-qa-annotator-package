One way to optimize this task is to use awk instead of a bash loop. Awk is a powerful text processing tool that can handle this kind of task efficiently. Here's an example awk script that should do what you need:

```
awk -F= '
  /^name=/ { name=$2 }
  /^value=/ && name { print name "=" $2; name="" }
' input.txt > output.txt
```

This script sets the field separator to "=" using the `-F` option, then uses two patterns to match lines starting with "name=" and "value=". When it sees a line starting with "name=", it saves the name in a variable. When it sees a line starting with "value=" and there is a saved name, it prints the name and value separated by "=".

This should be much faster than the bash loop, especially for larger files.