You can automate this process using Python and a few libraries. Here's a rough idea of how you can do it:

1. Use the `pandas` library to read the Excel file and get the descriptions.
2. Use the `html` library to convert the descriptions to HTML.
3. Use `pandas` again to write the HTML descriptions back to an Excel file.

Here's a simple script to illustrate this:

```python
import pandas as pd
from html import escape

# Read the Excel file
df = pd.read_excel('descriptions.xlsx')

# Convert the descriptions to HTML
df['description'] = df['description'].apply(lambda x: '<p>{}</p>'.format(escape(x)))

# Write the HTML descriptions back to an Excel file
df.to_excel('descriptions_html.xlsx', index=False)
```

This script assumes that the descriptions are in a column named 'description'. It simply wraps each description in `<p>` tags and escapes any special characters. If you need more complex HTML formatting, you might need to use a more powerful library like `BeautifulSoup`.

Please note that this script does not handle bold, italic, underline, or paragraph formatting. If you need to preserve this formatting, things get a bit more complicated because Excel does not store this information in a way that's easy to extract programmatically. You might need to use a library like `openpyxl` to read the Excel file and extract the formatting information, then convert that to HTML. However, this is a much more complex task and might not be feasible if you're not familiar with Python.