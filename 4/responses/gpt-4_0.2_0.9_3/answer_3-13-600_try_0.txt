You can disable the swipe animation by using a custom `ViewPager2.PageTransformer`. Here is an example of how you can do it:

```java
viewPager2.setPageTransformer(new ViewPager2.PageTransformer() {
    @Override
    public void transformPage(@NonNull View page, float position) {
        if (position <= -1 || position >= 1) {
            // Page is not visible -- stop any running animations
            page.clearAnimation();
        } else if (position == 0) {
            // Page is selected -- reset any views if necessary
            page.clearAnimation();
        } else {
            // Page is currently being swiped -- perform animations here
            page.setTranslationX(-position * page.getWidth());
        }
    }
});
```

In this code, we're setting a `PageTransformer` that moves the page off-screen when it's not visible, effectively disabling the swipe animation.

However, this will also disable the swipe animation when swiping manually. If you want to keep the swipe animation when swiping manually, but disable it when clicking on a tab, you would need to add some logic to your `TabLayout.OnTabSelectedListener` to disable the `PageTransformer` when a tab is clicked, and re-enable it when a swipe is detected.

Here is an example:

```java
tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
    @Override
    public void onTabSelected(TabLayout.Tab tab) {
        viewPager2.setUserInputEnabled(false);
        viewPager2.setCurrentItem(tab.getPosition(), false);
    }

    @Override
    public void onTabUnselected(TabLayout.Tab tab) {
    }

    @Override
    public void onTabReselected(TabLayout.Tab tab) {
    }
});

viewPager2.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
    @Override
    public void onPageScrollStateChanged(int state) {
        super.onPageScrollStateChanged(state);
        if (state == ViewPager2.SCROLL_STATE_IDLE) {
            viewPager2.setUserInputEnabled(true);
        }
    }
});
```

In this code, we're disabling user input and setting the current item without animation when a tab is selected, and re-enabling user input when the page scroll state is idle. This should give you the desired behavior.