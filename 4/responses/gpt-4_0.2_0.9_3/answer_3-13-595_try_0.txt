The issue you're facing might be due to the changes in the way Android 10 (API level 29) and above handle file storage. 

Starting from Android 10, the system uses a special kind of file URI called content URI, instead of file URI. Also, the system restricts access to app-specific directories on external storage.

To solve this issue, you have two options:

1. Use the MediaStore API to save media files (like photos and videos) and use the Storage Access Framework to save non-media files. This is the recommended approach, as it works on all versions of Android and abstracts the underlying file storage system.

2. If you need to work with file paths, you can opt your app out of this behavior by setting `android:requestLegacyExternalStorage` to `true` in your app's manifest file. This allows your app to use the old file URI method. However, this is a temporary solution and will not work starting from Android 11 (API level 30).

Here's how to set `requestLegacyExternalStorage` in your manifest:

```xml
<manifest ... >
  <!-- This attribute is "false" by default on apps targeting
       Android 10 or higher. -->
  <application android:requestLegacyExternalStorage="true" ... >
    ...
  </application>
</manifest>
```

Remember to remove this attribute when you update your app to target Android 11 or higher.