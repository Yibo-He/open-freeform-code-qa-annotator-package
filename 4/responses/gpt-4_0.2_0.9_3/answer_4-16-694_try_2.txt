The issue you're facing is due to the different structure of the HTML in different pages. The `cut` command you're using is dependent on the exact position of the `lang` attribute in the HTML tag, which can vary.

A more robust way to extract the language code would be to use a tool that can parse the HTML and extract the attribute value directly. For example, you can use `awk` to do this:

```bash
curl -Ls stick-it.app | awk -F 'lang="' '{print $2}' | awk -F '"' '{print $1}'
```

This command works by first splitting the input on the `lang="` string, and then splitting the result on the `"` character. This will give you the value of the `lang` attribute regardless of its position in the tag.

However, please note that this will still only give you the value of the first `lang` attribute it finds. If there are multiple `lang` attributes in the page, you might need a more complex solution.