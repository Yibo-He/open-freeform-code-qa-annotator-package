1. Excel:
   - To split the data into columns, you can use the "Text to Columns" feature. Select the column you want to split, go to the "Data" tab, and click on "Text to Columns". Choose "Delimited" and then select the delimiter (comma in this case). This method is preferred because it's straightforward and doesn't require any formula.
   - To split the data into rows, you would need to use a combination of "Text to Columns" and then transpose the data. However, this can be cumbersome if you have a large dataset. 

2. Python (pandas):
   - To split the data into columns, you can use the `str.split()` function with the `expand=True` parameter. This will split the string in the specified column at the delimiter and return a DataFrame.
   - To split the data into rows, you can use the `str.split()` function followed by `explode()`. This will split the string and then create a new row for each part.
   - Python is preferred when dealing with large datasets or when you need to automate the process. It's also more flexible and allows for more complex operations.

3. SQL:
   - SQL doesn't have a built-in function to split a column into multiple columns. However, you can use a combination of string functions (`SUBSTRING_INDEX`, `SUBSTRING`, etc.) to achieve this. This can be quite complex and is generally not recommended unless you're dealing with a small dataset or you have no other option.
   - To split the data into rows, you can use a combination of `UNION ALL` and string functions. Again, this can be quite complex and is generally not recommended.

4. Google Sheets:
   - Similar to Excel, Google Sheets has a "Split text to columns" feature. You can find it under the "Data" tab. Select the column you want to split, go to the "Data" tab, and click on "Split text to columns". Then choose the delimiter.
   - To split the data into rows, you would need to use a combination of "Split text to columns" and then transpose the data. However, this can be cumbersome if you have a large dataset. 

In general, the method you choose will depend on the size of your dataset, the complexity of the operation, and the tools you're comfortable with.