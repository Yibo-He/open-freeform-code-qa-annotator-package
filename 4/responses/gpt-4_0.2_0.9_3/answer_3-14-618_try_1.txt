In SwiftUI, `@Binding` is used to create a two-way binding between a property that stores data, and a view that displays and changes the data. It's important to note that `@Binding` does not store the data itself, instead, it provides a reference to data stored elsewhere.

To initialize a `@Binding` variable, you need to pass a `Binding<Bool>` object. You can create a `Binding<Bool>` object using the `.constant(_:)` method, which creates a binding that ignores any subsequent changes.

Here's how you can do it:

```swift
#if DEBUG
struct LoggedInView_Previews : PreviewProvider {
    static var previews: some View {
        LoggedInView(dismissView: .constant(false))
    }
}
#endif
```

In this case, `.constant(false)` creates a `Binding<Bool>` that always returns `false` when read, and does nothing when written. This is useful in previews and other places where you need to satisfy a `@Binding` requirement but donâ€™t have a source of truth for the data you can use.