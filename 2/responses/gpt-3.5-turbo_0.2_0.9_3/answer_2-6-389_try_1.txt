In ASP.NET Core, you can use the `IHttpContextAccessor` to create a global variable that can be accessed throughout the application. Here's how you can do it:

1. Add the `Microsoft.AspNetCore.Http` package to your project.

2. In the `Startup.cs` file, add the following code to the `ConfigureServices` method:

```
services.AddHttpContextAccessor();
```

3. In the class where you want to create the global variable, inject the `IHttpContextAccessor`:

```
private readonly IHttpContextAccessor _httpContextAccessor;

public MyClass(IHttpContextAccessor httpContextAccessor)
{
    _httpContextAccessor = httpContextAccessor;
}
```

4. Create the global variable and set its value:

```
_httpContextAccessor.HttpContext.Items["<variableName>"] = <value>;
```

5. To access the global variable from another class, inject the `IHttpContextAccessor` and retrieve the value:

```
var value = _httpContextAccessor.HttpContext.Items["<variableName>"];
```

Note that the value stored in the `HttpContext.Items` dictionary is only available for the duration of the current request. If you need to store data across multiple requests, you should consider using a database or a caching mechanism.