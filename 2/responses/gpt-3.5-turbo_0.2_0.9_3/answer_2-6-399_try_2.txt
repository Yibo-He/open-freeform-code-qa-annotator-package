To download the artifacts generated by the latest build of a public Azure DevOps project, you can use the REST API provided by Azure DevOps. Here are the steps you can follow:

1. Get the latest build ID of the project by sending a GET request to the following URL:

   ```
   https://dev.azure.com/{organization}/{project}/_apis/build/latest/{definitionId}?api-version=6.0
   ```

   Replace `{organization}` and `{project}` with the name of your organization and project respectively. Replace `{definitionId}` with the ID of the build definition you want to download artifacts from.

   This API will return the latest build ID of the specified build definition.

2. Get the download URL of the artifacts by sending a GET request to the following URL:

   ```
   https://dev.azure.com/{organization}/{project}/_apis/build/builds/{buildId}/artifacts?api-version=6.0
   ```

   Replace `{organization}` and `{project}` with the name of your organization and project respectively. Replace `{buildId}` with the latest build ID obtained from step 1.

   This API will return a JSON response containing the download URL of the artifacts.

3. Download the artifacts by sending a GET request to the download URL obtained from step 2. The artifacts will be downloaded as a zip file.

   You can use the `HttpClient` class in C# to send HTTP requests and download the artifacts. Here's an example code snippet:

   ```csharp
   using System.Net.Http;
   using System.Threading.Tasks;

   public async Task DownloadArtifactsAsync()
   {
       var organization = "LumiaWoA";
       var project = "Boot Shim";
       var definitionId = 3;

       var httpClient = new HttpClient();
       httpClient.DefaultRequestHeaders.Accept.Clear();
       httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

       // Step 1: Get the latest build ID
       var latestBuildUrl = $"https://dev.azure.com/{organization}/{project}/_apis/build/latest/{definitionId}?api-version=6.0";
       var latestBuildResponse = await httpClient.GetAsync(latestBuildUrl);
       latestBuildResponse.EnsureSuccessStatusCode();
       var latestBuildJson = await latestBuildResponse.Content.ReadAsStringAsync();
       var latestBuildId = JObject.Parse(latestBuildJson)["id"].Value<int>();

       // Step 2: Get the download URL of the artifacts
       var artifactsUrl = $"https://dev.azure.com/{organization}/{project}/_apis/build/builds/{latestBuildId}/artifacts?api-version=6.0";
       var artifactsResponse = await httpClient.GetAsync(artifactsUrl);
       artifactsResponse.EnsureSuccessStatusCode();
       var artifactsJson = await artifactsResponse.Content.ReadAsStringAsync();
       var downloadUrl = JObject.Parse(artifactsJson)["value"][0]["resource"]["downloadUrl"].Value<string>();

       // Step 3: Download the artifacts
       var artifactsResponse = await httpClient.GetAsync(downloadUrl);
       artifactsResponse.EnsureSuccessStatusCode();
       var artifactsStream = await artifactsResponse.Content.ReadAsStreamAsync();
       using (var fileStream = new FileStream("artifacts.zip", FileMode.Create))
       {
           await artifactsStream.CopyToAsync(fileStream);
       }
   }
   ```

   This code will download the artifacts as a zip file and save it to the current directory with the name `artifacts.zip`. You can modify the code to suit your needs.