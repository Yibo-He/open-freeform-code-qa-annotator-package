The error message indicates that the package `mysql-client` cannot be installed because it has no installation candidate. This could be due to a few reasons:

1. The package is not available in the repository that you are using. You can try updating the repository or using a different one.

2. The package has been deprecated or replaced by a different package. In this case, you can try installing the replacement package instead.

To fix the issue, you can try replacing `mysql-client` with `default-mysql-client` in your Dockerfile and see if that works. Here's the updated Dockerfile:

```
FROM php:7.3-fpm

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/
# Install dependencies
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
    apt-get update && apt-get install -y default-mysql-client \
    

RUN npm install -g npm

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*


# Install extensions
RUN docker-php-ext-install pdo pdo_mysql

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy existing application directory contents
COPY . /var/www

# Copy existing application directory permissions
COPY --chown=www:www . /var/www

# Change current user to www
USER www
# Set working directory
WORKDIR /var/www
# Expose port 9000 and start php-fpm server
EXPOSE 9000

CMD ["php-fpm"]
```

This should install the default MySQL client instead of the `mysql-client` package.