The approach you have taken is a valid one and is commonly used in Go projects. It is called a "local replace" directive and is used to replace a remote module with a local one during development. This approach is useful when you are working on multiple modules within the same repository and want to test them together.

Another approach is to use sub-packages within the same module. In your case, you could have a `players` package and a `main` package within the same module. This approach is useful when you have a small project with a few packages.

Making each module its own repository is not necessary unless you plan to use them in other projects or want to version them separately.

In summary, the best practice approach to having multiple modules within the same repository is to use local replace directives or sub-packages within the same module, depending on the size and complexity of your project.