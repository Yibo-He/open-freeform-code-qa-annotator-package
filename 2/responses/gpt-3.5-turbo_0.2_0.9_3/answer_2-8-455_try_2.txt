You can create a `map[string]Capability` to map the string representation to the corresponding enum value. Here's an example implementation of `ParseString` method:

```
var capabilityMap = map[string]Capability{
    "read":   Read,
    "create": Create,
    "update": Update,
    "delete": Delete,
    "list":   List,
}

func ParseString(s string) (Capability, error) {
    c, ok := capabilityMap[strings.ToLower(s)]
    if !ok {
        return -1, fmt.Errorf("invalid capability: %s", s)
    }
    return c, nil
}
```

This method first converts the input string to lowercase using `strings.ToLower` to ensure case-insensitive matching. It then looks up the corresponding enum value from the `capabilityMap`. If the input string is not a valid capability string, it returns an error. Otherwise, it returns the corresponding enum value.