The `AbstractController::getDoctrine()` method has been deprecated in Symfony 5.1 and will be removed in Symfony 6.0. The recommended alternative is to use dependency injection to inject the `Doctrine\Common\Persistence\ManagerRegistry` service into your controller.

Here's an example of how to do this:

```php
use Doctrine\Common\Persistence\ManagerRegistry;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class MyController extends AbstractController
{
    private $managerRegistry;

    public function __construct(ManagerRegistry $managerRegistry)
    {
        $this->managerRegistry = $managerRegistry;
    }

    public function myAction()
    {
        $entityManager = $this->managerRegistry->getManager();
        // use $entityManager to interact with the database
    }
}
```

In this example, we inject the `ManagerRegistry` service into the controller's constructor and store it in a private property. Then, in the `myAction()` method, we retrieve the `EntityManager` from the `ManagerRegistry` and use it to interact with the database.

Note that the `ManagerRegistry` service is available in the container with the `doctrine` ID. So, if you're using autowiring, you can simply type-hint `Doctrine\Common\Persistence\ManagerRegistry` in your constructor and Symfony will automatically inject the `doctrine` service.