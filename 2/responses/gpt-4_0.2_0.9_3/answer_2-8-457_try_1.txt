The error message you're seeing suggests that the Go debugger (dlv) is trying to run under Rosetta, which is a translation process that allows software compiled for Intel processors to run on Apple's M1 chips. However, dlv doesn't support running under Rosetta.

Here are a few things you can try to resolve this issue:

1. **Check your Go and dlv installations**: Make sure that both Go and dlv are installed natively for the arm64 architecture, not the amd64 architecture. You can check this by running `go env GOARCH` and `file $(which dlv)`. The output should be `arm64` for both commands.

2. **Reinstall Go and dlv**: If the above step reveals that either Go or dlv is not installed for the correct architecture, you should reinstall them. You can download the arm64 version of Go from the [official Go website](https://golang.org/dl/). After installing Go, you can reinstall dlv by running `go get github.com/go-delve/delve/cmd/dlv@latest`.

3. **Check your VSCode installation**: Make sure that you're running the arm64 version of VSCode, not the amd64 version. You can check this by going to `Code > About Visual Studio Code` in the VSCode menu. If you're running the amd64 version, you should download and install the arm64 version from the [official VSCode website](https://code.visualstudio.com/).

4. **Update your launch configuration**: In your `.vscode/launch.json` file, try adding `"runtimeArgs": ["--check-go-version=false"]` to your launch configuration. This will tell dlv to skip the Go version check, which might be causing the issue.

If none of these steps resolve the issue, it might be a bug in dlv or VSCode. In that case, I would recommend reporting the issue on the [dlv GitHub page](https://github.com/go-delve/delve/issues) or the [VSCode GitHub page](https://github.com/microsoft/vscode-go/issues).