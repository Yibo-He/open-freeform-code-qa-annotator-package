The issue you're experiencing could be due to several reasons. Here are some possible causes and solutions:

1. **Domain Configuration**: Ensure that your domain is correctly configured. If you're using `www` in your URL, make sure that your `SESSION_DOMAIN` in your `.env` file is set to `.yourdomain.com` (note the leading dot). This allows sessions to be shared across subdomains.

2. **Cookie Settings**: Check your cookie settings. In your `config/session.php`, make sure the `secure` option is set to `true` if you are using HTTPS, and `false` if not. Also, ensure that the `same_site` option is set to `null`, `lax`, or `strict`, depending on your needs.

3. **Server Timezone**: Ensure that your server's timezone matches the timezone set in your `config/app.php` file. A mismatch could cause the session to expire prematurely.

4. **File Permissions**: Check the permissions of the `storage/framework/sessions` directory. Laravel needs to be able to read and write to this directory. The permissions should be set to `755` or `775`.

5. **Cache**: Try clearing your application cache by running `php artisan cache:clear` and `php artisan config:clear` commands.

6. **Session Driver**: If you're using a driver other than `file` for sessions (like `database`, `redis`, etc.), ensure that it's correctly configured and working as expected.

7. **Middleware**: Ensure that the `\App\Http\Middleware\VerifyCsrfToken::class` middleware is included in your `app/Http/Kernel.php` file.

Remember to restart your server after making these changes to ensure they take effect. If none of these solutions work, it might be a good idea to contact your hosting provider and ask them if they have any special configurations that could be affecting your sessions.