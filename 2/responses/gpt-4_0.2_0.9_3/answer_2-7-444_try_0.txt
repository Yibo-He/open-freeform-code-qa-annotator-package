Yes, you can get the current logged in user's role using Laravel's Spatie/Roles package. However, you need to make sure you're calling the `hasRole` method on a user instance. 

Here's how you can do it:

```php
$user = auth()->user(); // get the currently logged in user

if($user->hasRole('admin')) { 
    // do something 
}
```

This will work if the currently logged in user has the 'admin' role. If there's no user logged in, `auth()->user()` will return `null`, and trying to call `hasRole` on `null` will result in an error. To prevent this, you can check if a user is logged in before checking their role:

```php
if (auth()->check() && auth()->user()->hasRole('admin')) {
    // do something
}
```

This will only execute the code inside the if statement if a user is logged in and they have the 'admin' role. 

If you want to get the role of the user, you can use the `getRoleNames` method:

```php
$user = auth()->user(); // get the currently logged in user

$roles = $user->getRoleNames(); // Returns a collection
```

Remember to use these codes inside a function where `auth()` can get the current logged in user.