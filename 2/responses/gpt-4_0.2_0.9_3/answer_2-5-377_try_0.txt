The problem you're facing is due to the fact that you're trying to format a `LocalDate` object which only contains date information (year, month, day) but not time. The format you're trying to use `"yyyy-MM-dd'T'HH:mm:ss'Z'"` also includes time and timezone information. 

To solve this, you should use `ZonedDateTime` or `LocalDateTime` instead of `LocalDate`. Here's how you can do it:

```java
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.ThreadLocalRandom;

public static String generateRandomDateAndTimeInString() {
    long minDay = ZonedDateTime.now().minusYears(70).toEpochSecond();
    long maxDay = ZonedDateTime.now().toEpochSecond();
    long randomDay = ThreadLocalRandom.current().nextLong(minDay, maxDay);

    ZonedDateTime randomDate = ZonedDateTime.ofInstant(Instant.ofEpochSecond(randomDay), ZoneOffset.UTC);
    System.out.println("date and time :: " + randomDate.toString());
    return formatDate(randomDate);
}

public static String formatDate(ZonedDateTime date){
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
    return date.format(formatter);
}
```
This code generates a random date and time within the last 70 years, and then formats it to the desired format. Note that `ZonedDateTime` is used instead of `LocalDate`, and `DateTimeFormatter` is used instead of `SimpleDateFormat` because the former is more modern and thread-safe.