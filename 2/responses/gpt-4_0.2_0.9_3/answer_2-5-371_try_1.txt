In Android, you can use the `layout_weight` attribute in `LinearLayout` to make your `ImageView` resize according to the screen size. This attribute specifies how much of the extra space in the layout should be allocated to the view.

Here's an example of how you can use it:

```xml
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <ImageView
        android:id="@+id/imageView3"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:background="#1750DF"
        android:scaleType="fitXY" />

    <Button
        android:id="@+id/resetButton"
        style="@style/Widget.AppCompat.Button.Borderless.Colored"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="32dp"
        android:layout_marginLeft="32dp"
        android:layout_marginBottom="56dp"
        android:background="#F70000"
        android:text="Undo"
        android:textColor="#000000"
        android:textSize="24sp" />

</LinearLayout>
```

In this example, the `ImageView` will take up all available space, leaving just enough for the `Button` to be displayed at its original size.

If you want to keep using `ConstraintLayout`, you can use `ConstraintLayout`'s `layout_constraintDimensionRatio` attribute to maintain a certain aspect ratio for your `ImageView`. Here's an example:

```xml
<androidx.constraintlayout.widget.ConstraintLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/imageView3"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:background="#1750DF"
        android:scaleType="fitXY"
        app:layout_constraintBottom_toTopOf="@+id/resetButton"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintDimensionRatio="H,16:9" />

    <Button
        android:id="@+id/resetButton"
        style="@style/Widget.AppCompat.Button.Borderless.Colored"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginStart="32dp"
        android:layout_marginLeft="32dp"
        android:layout_marginBottom="56dp"
        android:background="#F70000"
        android:text="Undo"
        android:textColor="#000000"
        android:textSize="24sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>
```

In this example, the `ImageView` will always maintain a 16:9 aspect ratio, and it will resize to fill as much space as possible while maintaining that aspect ratio and leaving enough space for the `Button`.