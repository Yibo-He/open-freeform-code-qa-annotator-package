The best practice for structuring Go projects with multiple modules is to have a single `go.mod` file at the root of your project and to structure your packages as subdirectories of the root. This is the simplest and most straightforward way to manage dependencies and it's the approach recommended by the Go team.

In your case, the directory structure would look like this:

```
project
├── go.mod
├── main.go
└── players
    ├── players.go
    └── players_test.go
```

And your `go.mod` file would look like this:

```
module github.com/<name>/<project>

go 1.x
```

Then, in your `main.go` file, you can import the `players` package like this:

```go
import "github.com/<name>/<project>/players"
```

This approach works well for most projects. If you have a very large project with many dependencies, you might consider splitting it into multiple modules, each with its own `go.mod` file. However, this adds complexity and should only be done if necessary.

Creating a separate repository for each module is generally not recommended, unless the modules are intended to be used independently by other projects. It adds overhead in terms of version control and dependency management, and it can make the project harder to understand and maintain.