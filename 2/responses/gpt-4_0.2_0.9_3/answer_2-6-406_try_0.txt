In a .NET 6 console application, you don't have the `WebApplication` class available. Instead, you can use the `ConfigurationBuilder` class to read the `appsettings.json` file. Here's an example:

```csharp
using Microsoft.Extensions.Configuration;
using System;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        var builder = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true);

        IConfigurationRoot configuration = builder.Build();

        // Now you can use the configuration object to get your settings
        var mySetting = configuration.GetSection("MySetting").Value;
        Console.WriteLine(mySetting);
    }
}
```

In this example, `appsettings.json` should be in the same directory as your executable. If it's not, you should adjust the path accordingly. Also, make sure that the `appsettings.json` file is being copied to the output directory. You can ensure this by going to the file properties (right click on the file in Solution Explorer -> Properties) and set 'Copy to Output Directory' to 'Copy if newer'. 

Don't forget to install the `Microsoft.Extensions.Configuration` and `Microsoft.Extensions.Configuration.Json` NuGet packages to your project. You can do this via the NuGet package manager or by running the following commands in your package manager console:

```
Install-Package Microsoft.Extensions.Configuration
Install-Package Microsoft.Extensions.Configuration.Json
```