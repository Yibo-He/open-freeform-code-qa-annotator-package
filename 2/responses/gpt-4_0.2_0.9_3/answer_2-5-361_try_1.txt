To get the current host being used by the application, you can use the `java.sql.DatabaseMetaData` interface which can provide comprehensive information about the database as a whole.

Here is a sample code snippet on how you can get the URL of the database currently being used:

```java
Connection connection = dataSource.getConnection();
DatabaseMetaData metaData = connection.getMetaData();
String url = metaData.getURL();
```

However, this URL will still be the same as the one you have configured in your application properties file. To extract the host from this URL, you can use regular expressions:

```java
Pattern pattern = Pattern.compile("\\(HOST=(.*?)\\)");
Matcher matcher = pattern.matcher(url);
while (matcher.find()) {
    System.out.println(matcher.group(1)); // This will print the host
}
```

This regular expression will match the `(HOST=domainName1.com)` and `(HOST=domainName2.com)` parts of your URL, and `matcher.group(1)` will give you the `domainName1.com` and `domainName2.com`.

Please note that this will give you all the hosts configured in your URL. If you want to get the host that is currently being used, you may need to implement a custom logic to ping the hosts and check which one is up.

Also, please note that this approach might not work if you are using a connection pool, as the connection pool might have connections to both hosts at the same time. In that case, you would need to implement a custom solution to track which host is currently being used by your application.