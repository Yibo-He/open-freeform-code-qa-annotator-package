In .NET 6, you can add XML comments to your minimal APIs in the same way you would add them to other methods. However, there are some additional steps you need to take to ensure these comments are included in the Swagger UI.

Here's how you can do it:

1. First, add the XML comment to your API. This should be placed directly above the API definition:

```csharp
/// <summary>
/// This API returns a list of all clients.
/// </summary>
app.MapGet("/clients",
     async (IClientRepository repo) =>
     {
          var results = await repo.GetClientsAsync();
          return mapper.Map<IEnumerable<ClientModel>>(results);
     });
```

2. Next, you need to ensure that your project is configured to generate an XML documentation file. You can do this by editing your .csproj file and adding the following lines inside the `<PropertyGroup>` tag:

```xml
<GenerateDocumentationFile>true</GenerateDocumentationFile>
<NoWarn>$(NoWarn);1591</NoWarn>
```

This will generate an XML file with the same name as your project in the output directory when you build your project.

3. Finally, you need to configure Swagger to use this XML file. You can do this by adding the following lines in your `Program.cs` file:

```csharp
var builder = WebApplication.CreateBuilder(args);

// ...

builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new() { Title = builder.Environment.ApplicationName, Version = "v1" });
    var filePath = Path.Combine(System.AppContext.BaseDirectory, $"{builder.Environment.ApplicationName}.xml");
    c.IncludeXmlComments(filePath);
});

// ...

var app = builder.Build();

// ...

app.UseSwagger();
app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", $"{builder.Environment.ApplicationName} v1");
});
```

This will tell Swagger to look for an XML file with the same name as your project in the output directory and include any comments it finds in the Swagger UI.

Now, when you run your project and navigate to the Swagger UI, you should see your XML comments included in the API documentation.