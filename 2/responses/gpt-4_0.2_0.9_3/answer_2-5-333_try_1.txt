You can use the `Stream.filter()` method to filter out the subjects with `status` as `false`. Here is how you can do it:

```java
class Student{
    String name;
    List<Subject> subjects1;
    List<Subject> subjects2;
    List<Subject> subjects3;
    // getters & setters

    public void removeInvalidSubjects() {
        subjects1 = subjects1.stream().filter(Subject::isStatus).collect(Collectors.toList());
        subjects2 = subjects2.stream().filter(Subject::isStatus).collect(Collectors.toList());
        subjects3 = subjects3.stream().filter(Subject::isStatus).collect(Collectors.toList());
    }
}

class Subject{
    String sub;
    Integer marks;
    boolean status;
    // getters & setters

    public boolean isStatus() {
        return status;
    }
}
```

In the `removeInvalidSubjects()` method, we are filtering out the subjects with `status` as `false` from `subjects1`, `subjects2`, and `subjects3` lists. The `filter()` method takes a predicate (a function returning a boolean) as an argument and returns a stream consisting of the elements of this stream that match the given predicate. In this case, the predicate is `Subject::isStatus`, which returns `true` if the `status` of the `Subject` is `true`, and `false` otherwise. The `collect()` method is a terminal operation that transforms the elements of the stream into a different kind of result, here a `List`.