In .NET Core, you can return JSON with a HTTP status code using the `OkObjectResult` class, which is a type of `ActionResult`. Here's how you can do it:

```csharp
public IActionResult GetResourceData()
{
    return new OkObjectResult(new { response = "Hello" });
}
```

The `OkObjectResult` class automatically sets the HTTP status code to 200 OK, and the object you pass to its constructor will be serialized to JSON.

If you want to return a different HTTP status code, you can use the `StatusCode` method, like this:

```csharp
public IActionResult GetResourceData()
{
    return StatusCode(201, new { response = "Created" });
}
```

This will return a HTTP 201 status code (Created), along with the JSON object.

In your specific case, you don't need to use the `Json` method when returning the result. The `Ok` method will automatically serialize the object to JSON. So, you can simplify your `IsAuthenticated` method like this:

```csharp
public IActionResult IsAuthenticated()
{
    return Ok("123");
}
```

This will return a HTTP 200 OK status code, along with the string "123" serialized to JSON.