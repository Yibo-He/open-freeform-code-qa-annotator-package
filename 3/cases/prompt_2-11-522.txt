How can I distinguish between high- and low-performance cores/threads in C++?

When talking about multi-threading, it often seems like threads are treated as equal - just the same as the main thread, but running next to it.
On some new processors, however, such as the [Apple "M" series](https://en.wikipedia.org/wiki/Apple_silicon#M_series) and the upcoming Intel [Alder Lake](https://en.wikipedia.org/wiki/Alder_Lake_(microprocessor)) series not all threads are equally as performant as these chips feature separate high-performance cores and high-efficiency, slower cores.
It’s not to say that there weren’t already things such as hyper-threading, but this seems to have a much larger performance implication.
Is there a way to query `std::thread`‘s properties and enforce on which cores they’ll run in C++?
