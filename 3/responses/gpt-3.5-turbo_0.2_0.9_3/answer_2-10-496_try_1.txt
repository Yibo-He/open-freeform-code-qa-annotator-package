To sort a vector of structs by multiple keys, you can use the `sort_by()` function and define a custom comparison function that compares the rows first and then the columns. Here's an example implementation:

```
my_vector.sort_by(|a, b| {
    if a.row == b.row {
        a.column.cmp(&b.column)
    } else {
        a.row.cmp(&b.row)
    }
});
```

This code sorts the vector by comparing the rows of each struct first. If the rows are equal, it compares the columns. This will give you the desired output where the vector is sorted by row and then by column.

Note that `sort_by()` sorts the vector in place, so you don't need to assign the result to a new variable.