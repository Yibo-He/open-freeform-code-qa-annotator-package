To save the user details in shared preferences, you can use the `shared_preferences` package in Flutter. Here's how you can modify your code to save the user details:

1. Import the `shared_preferences` package:

```
import 'package:shared_preferences/shared_preferences.dart';
```

2. Create a method to save the user details in shared preferences:

```
_saveUserDetails(String username, String password) async {
  SharedPreferences prefs = await SharedPreferences.getInstance();
  prefs.setString('username', username);
  prefs.setString('password', password);
}
```

3. Modify the `_login` method to call the `_saveUserDetails` method when the user logs in successfully:

```
_login(username, password) async {
  setState(() {
    loading = true;
  });

  var body = json.encode({
    "username": username,
    "password": password,
  });

  Map<String, String> headers = {
    'Content-type': 'application/json',
    'Accept': 'application/json',
  };

  await http
      .post("${GlobalVar.Ip}/wp-json/jwt-auth/v1/token",
          body: body, headers: headers)
      .then((response) {
    var body = json.decode(response.body);

    if (response.statusCode == 200) {
      _saveUserDetails(username, password); // save user details
      loading = false;
      Navigator.pushReplacement(
          context,
          MaterialPageRoute(
              builder: (BuildContext ctx) => HomePage()));
    } else {
      final snackBar = SnackBar(
        content: Text(body['message'].toString().trim()),
      );
      _scaffoldKey.currentState.showSnackBar(snackBar);
    }
    setState(() {
      loading = false;
    });
  });
}
```

4. Modify the `_fetchSessionAndNavigate` method to check if the user details are already saved in shared preferences and navigate to the home screen if the user is already logged in:

```
_fetchSessionAndNavigate() async {
  SharedPreferences prefs = await SharedPreferences.getInstance();
  String username = prefs.getString('username');
  String password = prefs.getString('password');

  if (username != null && password != null) {
    Navigator.pushReplacement(
        context, MaterialPageRoute(builder: (BuildContext ctx) => HomePage()));
  }
}
```

With these modifications, the user details will be saved in shared preferences when the user logs in successfully, and the app will check for saved user details when the app starts to determine if the user is already logged in.