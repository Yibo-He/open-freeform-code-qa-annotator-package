The issue is that you are changing the isSelected value of the Zone object but not updating the color of the button. To update the color of the button, you need to call setState() and update the color of the button in the onPressed() function.

Here's an updated version of your _makeZoneList() function:

```
List<Widget> _makeZoneList(List<Zone> zones) {
  List<Widget> buttons = new List();
  for (int i = 0; i < zones.length; i++) {
    buttons.add(
      RaisedButton(
        color: zones[i].isSelected ? AppColors.primaryColor : AppColors.white,
        onPressed: () {
          setState(() {
            if (zones[i].isSelected) {
              zones[i].isSelected = false;
            } else {
              zones[i].isSelected = true;
            }
          });
        },
        child: Text(zones.elementAt(i).text),
      ),
    );
  }
  return buttons;
}
```

In this updated version, we are calling setState() inside the onPressed() function and updating the color of the button based on the isSelected value of the Zone object. This should update the color of the button when it is pressed.