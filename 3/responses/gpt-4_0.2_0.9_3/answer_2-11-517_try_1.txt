In C++, string interpolation isn't as straightforward as in C# or JavaScript. However, there are several ways to format strings in C++. Here are a few common methods:

1. **Using `printf` or `sprintf` from C standard library**: This is an old way of doing it, but it's still used in some cases. Here's an example:

```cpp
int myVariable = 5;
printf("My variable has value %d", myVariable);
```

2. **Using `std::stringstream`**: This is a more C++ way of doing it. Here's an example:

```cpp
#include <sstream>

int myVariable = 5;
std::stringstream ss;
ss << "My variable has value " << myVariable;
std::string result = ss.str();
```

3. **Using `std::to_string`**: This is a simple way to convert a number to a string. Here's an example:

```cpp
int myVariable = 5;
std::string result = "My variable has value " + std::to_string(myVariable);
```

4. **Using `std::format` in C++20**: This is a new feature in C++20 that makes string formatting much easier. Here's an example:

```cpp
#include <format>

int myVariable = 5;
std::string result = std::format("My variable has value {}", myVariable);
```

Please note that `std::format` is not yet widely supported by all compilers as of the time of writing.

So, while C++ doesn't have the same kind of string interpolation as C# or JavaScript, there are still several ways to format strings. The best method to use depends on your specific needs and the features supported by your compiler.