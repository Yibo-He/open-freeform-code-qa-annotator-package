The issue you're facing is likely due to the way you're trying to import the image. In TypeScript, when you use `import * as img from '../assets/image.jpg'`, it's trying to import all exported members from the module, which is not applicable for an image file.

Instead, you should use the default import syntax:

```tsx
import img from '../assets/image.jpg';
```

Then, you can use the imported image in your component like this:

```tsx
const Box = props => {
  return <img src={img} alt="description" />;
}
```

Also, make sure that your `tsconfig.json` file includes the directory where your `index.d.ts` file is located. If the `index.d.ts` file is in the `src` directory, your `tsconfig.json` file should look something like this:

```json
{
  "compilerOptions": {
    ...
  },
  "include": ["src"]
}
```

This tells TypeScript to include all TypeScript files (`.ts`, `.tsx`) and TypeScript declaration files (`.d.ts`) in the `src` directory.

If you've done all of these and the issue still persists, try restarting your TypeScript server in VS Code. Sometimes, the server doesn't pick up changes in the `tsconfig.json` or declaration files until it's restarted. You can do this by opening the command palette (Ctrl+Shift+P or Cmd+Shift+P), then typing "TypeScript: Restart TS server".