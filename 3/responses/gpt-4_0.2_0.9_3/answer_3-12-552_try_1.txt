The AppBar in Flutter is quite flexible and allows you to customize its layout to a great extent. However, it's important to understand how to correctly use the widgets to achieve the desired layout.

In your case, you can use a Row widget to arrange the Drawer icon, the title, and the action buttons horizontally. Here's a sample code snippet that you can use as a starting point:

```dart
appBar: AppBar(
  title: Row(
    mainAxisAlignment: MainAxisAlignment.spaceBetween,
    children: <Widget>[
      Builder(
        builder: (context) => IconButton(
          icon: Icon(Icons.menu),
          onPressed: () => Scaffold.of(context).openDrawer(),
        ),
      ),
      Text(
        'Title',
        style: TextStyle(fontSize: 22.0),
      ),
      Row(
        children: <Widget>[
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {},
          ),
          IconButton(
            icon: Icon(Icons.more_vert),
            onPressed: () {},
          ),
        ],
      ),
    ],
  ),
),
```

In this code:

- The `mainAxisAlignment: MainAxisAlignment.spaceBetween` property makes sure that the space between the children widgets is distributed evenly.
- The `Builder` widget is used to get the current `BuildContext` that the `IconButton` for the Drawer can use to open the Drawer when pressed.
- The `Row` widget inside the main `Row` widget is used to group the action buttons together.

Please replace the `onPressed: () {}` with your own functions.

Remember to add a `Drawer` widget to your `Scaffold` for the menu button to work.