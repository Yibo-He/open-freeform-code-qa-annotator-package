To achieve the desired layout, you need to create a list of image pickers. Each picker will be responsible for picking and displaying one image. Here is a sample code that demonstrates how to do this:

```dart
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'dart:io';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Image Picker'),
        ),
        body: ImagePickerWidget(),
      ),
    );
  }
}

class ImagePickerWidget extends StatefulWidget {
  @override
  _ImagePickerWidgetState createState() => _ImagePickerWidgetState();
}

class _ImagePickerWidgetState extends State<ImagePickerWidget> {
  final ImagePicker _picker = ImagePicker();
  List<XFile> _images = [];

  @override
  Widget build(BuildContext context) {
    return GridView.builder(
      itemCount: _images.length + 1,
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 3,
        crossAxisSpacing: 10,
        mainAxisSpacing: 10,
      ),
      itemBuilder: (context, index) {
        if (index == _images.length) {
          return IconButton(
            icon: Icon(Icons.add),
            onPressed: () async {
              final XFile? image = await _picker.pickImage(source: ImageSource.gallery);
              if (image != null) {
                setState(() {
                  _images.add(image);
                });
              }
            },
          );
        } else {
          return Image.file(
            File(_images[index].path),
            fit: BoxFit.cover,
          );
        }
      },
    );
  }
}
```

This code creates a grid of images. When you click the plus button, it opens the image picker. After you select an image, it adds the image to the grid. The grid automatically updates to include the new image.

Please note that you need to add the following permissions to your AndroidManifest.xml and Info.plist for Android and iOS respectively:

Android:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
```

iOS:
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>App requires access to the photo library</string>
```

Also, make sure to add the image_picker package to your pubspec.yaml file:
```yaml
dependencies:
  flutter:
    sdk: flutter
  image_picker: ^0.8.4+4
```