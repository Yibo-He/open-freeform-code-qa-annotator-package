This seems to be a known issue with rust-analyzer. It sometimes has trouble with macro expansion and can give false positives. The rust-analyzer team is actively working on improving macro support, but it's not perfect yet.

The good news is that if your code compiles and runs correctly, then it's likely that the problem is with rust-analyzer and not your code.

Here are a few things you can try:

1. **Update rust-analyzer**: Make sure you're using the latest version of rust-analyzer. The team is constantly making improvements, so updating might solve your problem.

2. **Check your Rust version**: Make sure you're using a recent stable version of Rust. Rust-analyzer might have trouble with older versions.

3. **Disable macro expansion**: As a last resort, you can disable macro expansion in rust-analyzer. This will stop it from trying to expand macros and should prevent the error. However, this will also disable some of rust-analyzer's features. You can disable macro expansion by adding the following to your settings.json file in VS Code:
    ```
    "rust-analyzer.procMacro.enable": false
    ```

Remember that rust-analyzer is a separate tool from the Rust compiler. While it's generally very good at catching errors, it's not perfect and can sometimes give false positives or negatives. If your code compiles and runs correctly, then you can usually trust that it's correct, even if rust-analyzer is showing an error.