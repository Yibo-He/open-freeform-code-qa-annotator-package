You can use a recursive function to traverse the JSON object tree and find the object with the specified ID. Here's a simple JavaScript function that does this:

```javascript
function findObject(id, obj) {
    if (obj.id === id) {
        return obj;
    }
    for (let i = 0; i < obj.child.length; i++) {
        let found = findObject(id, obj.child[i]);
        if (found) return found;
    }
}

// Usage
let data = {
    "id": "A",
    "name": "Item A",
    "child": [
        {
            "id": "B",
            "name": "Item B",
            "child": [
                {
                    "id": "C",
                    "name": "Item C",
                    "child": []
                }
            ]
        },
        {
            "id": "D",
            "name": "Item D",
            "child": []
        }
    ]
};

let result = findObject("C", data);
console.log(result);
```

This function starts by checking if the current object's `id` matches the specified `id`. If it does, it returns the object. If it doesn't, it recursively calls `findObject` on each of the object's children. If any of these calls return a non-null value, it returns that value. If none of the calls return a non-null value, it returns `null`.