The issue with your current code is that you're defining the `TabWrapper` styled component inside your `Tab` component. This means that a new `TabWrapper` is created every time `Tab` is rendered, which is inefficient.

You should define your styled components outside of your render method (or functional component body). You can still make the styles dynamic by passing props to the styled component. Here's how you can refactor your code:

```jsx
import React from 'react'
import styled from 'styled-components'

const TabWrapper = styled.li`
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 100px;
    margin: 1px;
    font-size: 3em;
    color: ${props => (props.isSelected ? `white` : `black`)};
    background-color: ${props => (props.isSelected ? `black` : `#C4C4C4`)};
    cursor: ${props => (props.isSelected ? 'default' : `pointer`)};
`

const Tab = ({ onClick, isSelected, children }) => {
    return <TabWrapper onClick={onClick} isSelected={isSelected}>{children}</TabWrapper>
}

export default Tab
```

In this refactored code, `TabWrapper` is only created once, and then reused with different props for each `Tab`. This is more efficient and will improve render times.