`Pressable` is a new core component introduced in React Native 0.63. It is designed to handle various states of press interactions in a more unified and extendable way, compared to the older components like `TouchableOpacity`, `TouchableHighlight`, etc.

Here are some key differences between `Pressable` and `TouchableOpacity`:

1. **State Handling**: `Pressable` provides more control over the press states (pressed, not pressed) with its `pressed` state. This allows you to change the style or behavior of the component based on the press state. `TouchableOpacity` does not have this feature.

2. **Hover and Focus States**: `Pressable` also supports hover and focus states, which are useful for platforms like web, TV, etc. `TouchableOpacity` does not support these states.

3. **Child Function**: `Pressable` can take a function as its child that receives a boolean indicating whether the component is currently pressed. This is not possible with `TouchableOpacity`.

4. **Hit Slop**: Both `Pressable` and `TouchableOpacity` support hit slop, but `Pressable` allows you to specify different hit slop values for different sides (left, right, top, bottom, vertical, horizontal).

5. **Ripple Effect**: `Pressable` supports ripple effect on Android, which is not available in `TouchableOpacity`.

6. **Delay Events**: Both components support delay events (`delayLongPress`, `delayPressIn`, `delayPressOut`), but `Pressable` also supports `android_disableSound`, `android_ripple`, and `unstable_pressDelay`.

When to use `Pressable` over `TouchableOpacity`?

- When you need more control over the press states.
- When you need to support hover and focus states.
- When you need to use a function as a child that receives the press state.
- When you need to specify different hit slop values for different sides.
- When you want to use the ripple effect on Android.

In general, `Pressable` is more flexible and powerful than `TouchableOpacity`, and it is recommended to use `Pressable` for new projects. However, if you have an existing project that uses `TouchableOpacity` and it meets all your needs, there is no urgent need to switch to `Pressable`.