You can configure Axios to trust the certificate by providing the certificate to the `https.Agent` instance. Here's how you can do it:

1. First, you need to download the certificate from the server. You can do this by visiting the website in your browser and exporting the certificate. Make sure to export it as a Base-64 encoded X.509 (.CER).

2. Save the certificate file in your project directory.

3. Then, you can read the certificate file in your Node.js application and provide it to the `https.Agent` instance. Here's how you can do it:

```javascript
const fs = require('fs');
const https = require('https');
const axios = require('axios');

// Read the certificate file
const cert = fs.readFileSync('./path/to/your/certificate.cer');

const agent = new https.Agent({
  ca: cert
});

const result = await axios.post(
  `https://${url}/login`,
  body,
  {
    httpsAgent: agent
  }
);
```

In this code, `fs.readFileSync` is used to read the certificate file. The content of the file is then provided to the `https.Agent` instance as the `ca` option. This will make Axios trust the certificate.

Please replace `'./path/to/your/certificate.cer'` with the actual path to your certificate file.

Remember to keep your certificate file secure, as anyone with access to it could potentially use it to make trusted requests to your server.