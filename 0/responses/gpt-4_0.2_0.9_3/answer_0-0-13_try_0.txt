Yes, you can use an object to store all the user data elements and use a single state hook. Here's how you can do it:

```jsx
const [userData, setUserData] = useState({
  mobile: '',
  username: '',
  email: '',
  password: '',
  confirmPassword: '',
});

const handleChange = (e) => {
  setUserData({
    ...userData,
    [e.target.id]: e.target.value,
  });
};
```

And then in your input fields, you can use the `handleChange` function for the `onChange` event:

```jsx
<input 
  type="text"
  className="form-control"
  id="mobile"
  placeholder="Enter a valid mobile number"
  onChange={handleChange}
/>
```

In this case, the `id` of the input field should match the key in the `userData` object. When the `handleChange` function is called, it will update the corresponding key in the `userData` object with the input value.