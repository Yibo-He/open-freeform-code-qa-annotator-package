In Tailwind CSS, you can define your breakpoints in the `tailwind.config.js` file. Here's an example:

```javascript
module.exports = {
  theme: {
    screens: {
      'sm': '640px',
      'md': '768px',
      'lg': '1024px',
      'xl': '1280px',
      '2xl': '1536px',
    },
    extend: {},
  },
  variants: {},
  plugins: [],
}
```

These breakpoints are then available to use with any utility class, just prefix the utility with the name of the breakpoint followed by a colon. For example, `md:text-center`.

If you want to abstract these breakpoints into components, you can use `@apply` directive in your CSS. Here's an example:

```css
@media (min-width: theme('screens.md')) {
  .my-component {
    @apply text-center text-red-500;
  }
}
```

In this example, `my-component` will have `text-center` and `text-red-500` styles applied at the `md` breakpoint.

Remember to use `postcss` and `postcss-import` to process your CSS files. This is necessary for the `@apply` directive and `theme()` function to work.

Here's a sample `postcss.config.js`:

```javascript
module.exports = {
  plugins: [
    require('postcss-import'),
    require('tailwindcss'),
    require('autoprefixer'),
  ]
}
```

And in your main CSS file:

```css
@import 'path/to/your/component.css';
```

This way, you can abstract your responsive styles into separate components and still use the power of Tailwind's utility classes.