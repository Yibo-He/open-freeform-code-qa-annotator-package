The issue you are facing is because you are trying to use `ipcMain` in the renderer process (Vue component). `ipcMain` is only available in the main process. In the renderer process, you should use `ipcRenderer`.

Here is how you can fix your code:

Component: Splash.vue
```
<template>
    <div @click="open">open</div>      
</template>

<script>

const { ipcRenderer } = require('electron')

export default {
    methods: {
        open()
        {
            ipcRenderer.send('my-open-event', 'some argument');
        }
    }
}
</script>
```

background.js
```
import { app, protocol, BrowserWindow, ipcMain } from 'electron'

...

ipcMain.on('my-open-event', async (event, arg) => {
    try {
        console.log(arg); // prints "some argument"
        // "Will call some executable here";
    } catch (e) {
        console.error(e)
    }
})
```

main.js
```
import Vue from 'vue'
import App from './App.vue'
import store from './store'

Vue.config.productionTip = false

new Vue({
  store,
  render: h => h(App)
}).$mount('#app')
```

In this way, when you click on the div in your Splash.vue component, it will send 'my-open-event' to the main process, which will be caught in your background.js file. 

Also, please note that `__dirname` is not available in the renderer process when using webpack. If you need to use it, you can use `__static` instead, which is a global variable pointing to the public directory.