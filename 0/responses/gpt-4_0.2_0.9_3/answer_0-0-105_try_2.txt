It's not uncommon for developers to use both Jest and Cypress in the same project, as they serve different purposes and can complement each other well. Jest is primarily used for unit testing and snapshot testing, while Cypress is used for end-to-end testing. 

However, it's also true that maintaining tests in two different libraries can be more complex and time-consuming. The decision to use both should be based on the specific needs of your project. If your application has a lot of complex interactions that need to be tested in a real browser environment, then Cypress would be a good choice. On the other hand, if your application is more focused on logic and data manipulation, then Jest's unit testing capabilities would be more beneficial.

The new Cypress Component Testing feature you mentioned is a great solution as it allows you to test both components and end-to-end scenarios using the same library, which simplifies maintenance and learning curve.

In conclusion, there's no one-size-fits-all answer to this question. It depends on the specific needs of your project and your personal preference. It's always a good idea to experiment with different tools and see which one works best for you.