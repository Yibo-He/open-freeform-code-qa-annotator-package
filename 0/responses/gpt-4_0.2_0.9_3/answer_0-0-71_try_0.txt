The issue you're facing is related to how TypeScript handles type declarations. The '@types' directory is a special directory that TypeScript uses to look for global type definitions. It's not meant to be used for importing types directly.

Instead, you should import your types from the file they are declared in. Here's how you can do it:

1. First, make sure your `tsconfig.json` file includes the `src` directory in the `include` array. If it doesn't, add it:

```json
{
  "include": ["src"]
}
```

2. Then, you can import your type using a relative path from the file you want to use it in. For example, if your `app.d.ts` file is in the `src/@types` directory and you want to use it in a file in the `src/components` directory, you would import it like this:

```tsx
import { AuthKeyT } from '../@types/app';
```

Remember that the path should be relative to the file you're importing the type into, not the root of your project.

3. If you want to avoid relative paths, you can add a `baseUrl` and `paths` configuration to your `tsconfig.json` file:

```json
{
  "compilerOptions": {
    "baseUrl": "src",
    "paths": {
      "@types/*": ["@types/*"]
    }
  },
  "include": ["src"]
}
```

Then, you can import your type like this:

```tsx
import { AuthKeyT } from '@types/app';
```

This tells TypeScript to look for modules starting with '@types/' in the 'src/@types' directory.