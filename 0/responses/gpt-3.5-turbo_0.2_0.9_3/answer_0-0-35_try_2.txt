To connect to Heroku Redis using TLS on Node, you should use the REDIS_TLS_URL environment variable instead of REDIS_URL. Here's an example of how to connect to Heroku Redis using node_redis v3:

```
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(":")[1]);
```

In this example, we're using the `url` module to parse the REDIS_TLS_URL environment variable and create a Redis client with TLS enabled. We're also setting `rejectUnauthorized` to `false` to disable certificate validation. Finally, we're authenticating the client using the password from the REDIS_TLS_URL.

Note that disabling certificate validation is not recommended in production environments. You should obtain a valid SSL certificate and enable certificate validation in your Redis client.