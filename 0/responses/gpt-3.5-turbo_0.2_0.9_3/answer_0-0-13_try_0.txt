Yes, you can use an object to store all the user data elements instead of individual state variables. Here's an example:

```
const [userData, setUserData] = useState({
  mobile: '',
  username: '',
  email: '',
  password: '',
  confirmPassword: ''
});

<input type="text"
       className="form-control"
       id="mobile"
       placeholder="Enter a valid mobile number"
       value={userData.mobile}
       onChange={event => {
         setUserData({...userData, mobile: event.target.value})
       }}/>
```

In this example, `userData` is an object that contains all the user data elements. The `setUserData` function is used to update the entire object. When updating a specific property of the object, you can use the spread operator (`...`) to copy all the existing properties of the object and then update the specific property that needs to be changed.