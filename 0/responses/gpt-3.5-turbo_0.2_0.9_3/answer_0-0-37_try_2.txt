To create a route with 2 optional parameters in the URL using Nestjs, you can use the `@Param()` decorator to define the parameters in your controller method. Here's an example:

```
@Get('route/:param1/config/:optionalParam1?/:optionalParam2?')
async getConfig(
  @Param('param1') param1: string,
  @Param('optionalParam1') optionalParam1?: string,
  @Param('optionalParam2') optionalParam2?: string,
) {
  // Your code here
}
```

In this example, `:param1` is a required parameter, while `:optionalParam1` and `:optionalParam2` are optional parameters. The `?` character after each optional parameter indicates that it may or may not be present in the URL.

You can then access the values of these parameters in your controller method using the `@Param()` decorator. The `optionalParam1` and `optionalParam2` parameters are marked as optional by adding a `?` after their names in the method signature. This means that they may or may not be present in the URL, and will be undefined if they are not present.

I hope this helps! Let me know if you have any further questions.