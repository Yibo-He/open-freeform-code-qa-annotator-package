The `.attrs()` function in styled components allows you to attach additional props to a component. It can be useful when you want to provide default props or when you want to pass props to a component that are not related to styling.

Here's a simple example:

```
import styled from 'styled-components';

const Button = styled.button.attrs({
  type: 'button',
  disabled: props => props.isLoading
})`
  background-color: ${props => props.color || 'blue'};
  color: white;
  padding: 10px;
`;

<Button isLoading color="red">Click me</Button>
```

In this example, we're creating a `Button` component using styled components. We're using the `.attrs()` function to attach two additional props to the component: `type` and `disabled`. The `type` prop is set to `'button'` by default, and the `disabled` prop is set to `true` if the `isLoading` prop is `true`.

We're also using the `color` prop to set the background color of the button. If the `color` prop is not provided, the default value of `'blue'` is used.

So when we render the `Button` component with the `isLoading` and `color` props, the resulting HTML will look like this:

```
<button type="button" disabled="disabled" style="background-color: red; color: white; padding: 10px;">Click me</button>
```

As you can see, the `type` and `disabled` props have been added to the button element, and the `color` prop has been used to set the background color.