To get the value of the Switch component in your `onCreate` function, you need to add the `name` attribute to the `Form.Item` that wraps the `Switch` component. The `name` attribute should match the key in the `values` object that is passed to the `onCreate` function.

Here's an updated version of your code that includes the `name` attribute and passes the value of the Switch to the `onCreate` function:

```
<Form form={form} layout="vertical">
  <Form.Item
    label="Description"
    name="description"
    rules={[{ required: true, message: 'Enter a description' }]}
  >
    <Input placeholder="Enter Description" />
  </Form.Item>

  <Form.Item name="chargable" noStyle valuePropName="checked">
    <Switch checkedChildren="Yes" unCheckedChildren="No" />
    <span>Chargable</span>
  </Form.Item>

  <Button
    onClick={() => {
      form
        .validateFields()
        .then((values) => {
          form.resetFields()
          onCreate(values)
        })
        .catch((info) => {
          console.log('Validate Failed:', info)
        })
    }}
  >
    Save
  </Button>
</Form>
```

In the `onCreate` function, you can access the value of the Switch using `values.chargable`. For example:

```
const onCreate = (values) => {
  console.log(values.description) // logs the value of the description field
  console.log(values.chargable) // logs the value of the Switch component
}
```