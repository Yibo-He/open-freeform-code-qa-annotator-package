The error message you are seeing indicates that the SSL certificate presented by the server is not trusted by the client. This can happen if the certificate is self-signed, expired, or issued by an untrusted certificate authority.

To correctly verify the SSL certificate, you need to provide axios with the root certificate of the certificate authority that issued the server's SSL certificate. You can obtain this certificate from the certificate authority's website or from the server administrator.

Once you have the root certificate, you can configure axios to use it by creating a custom https agent. Here's an example:

```
const https = require('https');
const axios = require('axios');
const fs = require('fs');

const ca = fs.readFileSync('/path/to/root/certificate.pem');

const agent = new https.Agent({
  ca: ca
});

const result = await axios.post(
  `https://${url}/login`,
  body,
  {
    httpsAgent: agent
  }
);
```

In this example, we read the root certificate from a file and pass it to the https agent. The agent will use this certificate to verify the SSL certificate presented by the server.

Note that if the SSL certificate is issued by a well-known certificate authority, you may not need to provide the root certificate as it may already be included in the list of trusted root certificates on your system.