Sure, you can create a state for `firstName` and `lastName` in your parent component and pass them as props to your `InputField` component. Then, you can update the state of `firstName` and `lastName` on button click and access their values.

Here's an updated code for your `InputField` component:

```
import React, { useState } from 'react';

export default function InputField({ name, label, value, onChange }) {
  return (
    <div>
      <label>{label}</label>
      <input type="text" value={value} name={name} onChange={onChange} />
    </div>
  );
}
```

And here's an updated code for your parent component:

```
import React, { useState } from 'react';
import InputField from './InputField';

export default function App() {
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');

  const handleFirstNameChange = (e) => {
    setFirstName(e.target.value);
  };

  const handleLastNameChange = (e) => {
    setLastName(e.target.value);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('First Name:', firstName);
    console.log('Last Name:', lastName);
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <InputField
          name="firstName"
          label="First Name"
          value={firstName}
          onChange={handleFirstNameChange}
        />
        <InputField
          name="lastName"
          label="Last Name"
          value={lastName}
          onChange={handleLastNameChange}
        />
        <button type="submit">Submit</button>
      </form>
    </div>
  );
}
```

In this code, we have created two state variables `firstName` and `lastName` and passed them as props to the `InputField` component. We have also created two functions `handleFirstNameChange` and `handleLastNameChange` to update the state of `firstName` and `lastName` respectively. Finally, we have created a `handleSubmit` function to log the values of `firstName` and `lastName` on button click.