To connect to Heroku Redis using TLS on Node, you should use the REDIS_TLS_URL environment variable instead of REDIS_URL. Here's an example code snippet using node_redis v3:

```javascript
const redis = require('redis');
const url = require('url');

const redisUrl = url.parse(process.env.REDIS_TLS_URL);
const client = redis.createClient(redisUrl.port, redisUrl.hostname, {
  tls: {
    rejectUnauthorized: false
  }
});

client.auth(redisUrl.auth.split(':')[1]);

client.on('connect', () => {
  console.log('Connected to Redis');
});

client.on('error', (err) => {
  console.error('Error connecting to Redis:', err);
});
```

Note that we're passing in the `rejectUnauthorized: false` option to the `tls` object to disable certificate validation. This is necessary because Heroku Redis uses a self-signed certificate. However, you should be aware that this makes your connection less secure, so you should only use this option if you trust the network you're connecting from.

I hope this helps! Let me know if you have any further questions.